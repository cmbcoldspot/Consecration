package top.theillusivec4.consecration.common.network;

import java.util.function.Supplier;
import net.minecraft.client.Minecraft;
import net.minecraft.client.multiplayer.ClientLevel;
import net.minecraft.network.FriendlyByteBuf;
import net.minecraft.world.entity.Entity;
import net.minecraft.world.entity.LivingEntity;
import net.minecraftforge.network.NetworkEvent;
import top.theillusivec4.consecration.api.ConsecrationApi;

public record SPacketSetVulnerability(int entityId, int duration) {

  public static void encode(SPacketSetVulnerability msg, FriendlyByteBuf buf) {
    buf.writeInt(msg.entityId);
    buf.writeInt(msg.duration);
  }

  public static SPacketSetVulnerability decode(FriendlyByteBuf buf) {
    return new SPacketSetVulnerability(buf.readInt(), buf.readInt());
  }

  public static void handle(SPacketSetVulnerability msg, Supplier<NetworkEvent.Context> ctx) {
    ctx.get().enqueueWork(() -> {
      ClientLevel level = Minecraft.getInstance().level;

      if (level != null) {
        Entity entity = level.getEntity(msg.entityId);

        if (entity instanceof LivingEntity livingEntity) {
          ConsecrationApi.getInstance().getUndying(livingEntity)
              .ifPresent(undying -> undying.setVulnerableDuration(msg.duration));
        }
      }
    });
    ctx.get().setPacketHandled(true);
  }
}
